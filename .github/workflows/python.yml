# This file is autogenerated by maturin v1.9.3
# To update, run
#
#    maturin generate-ci github
#
# NOTE: Some modifications were made to accommodate this monorepo.
# Any `on.*.paths`, `working-directory`, and `matrix.pkg` were added/modified
# and shall be retained if regenerating this workflow.
# Also added the test job
name: Python

on:
  push:
    branches: [main]
    tags:
      - "mdi/v*"
      - "octicons/v*"
      - "fontawesome/v*"
      - "simple-icons/v*"
    paths:
      - crates/**
      - .github/workflows/python.yml
      - "!crates/*/deno.json"
      - "!crates/*/main.ts"
  pull_request:
    branches: [main]
    paths:
      - crates/**
      - .github/workflows/python.yml
      - "!crates/*/deno.json"
      - "!crates/*/main.ts"

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - run: rustup update --no-self-update
      - uses: astral-sh/setup-uv@4959332f0f014c5280e7eac8b70c90cb574c9f9b # v6.6.0
        with:
          version: "latest"
          enable-cache: true
      - name: Cache cargo artifacts
        uses: actions/cache@v4
        with:
          path: "~/.cargo"
          key: cargo-py-test-${{ hashFiles('Cargo.lock') }}
      - name: Install Python deps
        run: uv sync --all-groups --no-dev
      - name: Run Tests
        run: uv run --no-sync pytest

  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        pkg: ["mdi", "octicons", "fontawesome", "simple-icons"]
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
          - runner: ubuntu-22.04
            target: s390x
          - runner: ubuntu-22.04
            target: ppc64le
    name: linux ${{ matrix.pkg }} ${{ matrix.platform.target }}
    steps:
      - uses: actions/checkout@v5
        if: ${{ (startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, matrix.pkg)) || !startsWith(github.ref, 'refs/tags/') }}
      - uses: actions/setup-python@v5
        if: ${{ (startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, matrix.pkg)) || !startsWith(github.ref, 'refs/tags/') }}
        with:
          python-version: 3.x
      - name: Build wheels
        if: ${{ (startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, matrix.pkg)) || !startsWith(github.ref, 'refs/tags/') }}
        uses: PyO3/maturin-action@v1
        with:
          working-directory: crates/${{ matrix.pkg }}
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: auto
      - name: Upload wheels
        if: ${{ (startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, matrix.pkg)) || !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.pkg }}-linux-${{ matrix.platform.target }}
          path: crates/${{ matrix.pkg }}/dist

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        pkg: ["mdi", "octicons", "fontawesome", "simple-icons"]
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
    name: musllinux ${{ matrix.pkg }} ${{ matrix.platform.target }}
    steps:
      - uses: actions/checkout@v5
        if: ${{ (startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, matrix.pkg)) || !startsWith(github.ref, 'refs/tags/') }}
      - uses: actions/setup-python@v5
        if: ${{ (startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, matrix.pkg)) || !startsWith(github.ref, 'refs/tags/') }}
        with:
          python-version: 3.x
      - name: Build wheels
        if: ${{ (startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, matrix.pkg)) || !startsWith(github.ref, 'refs/tags/') }}
        uses: PyO3/maturin-action@v1
        with:
          working-directory: crates/${{ matrix.pkg }}
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: musllinux_1_2
      - name: Upload wheels
        if: ${{ (startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, matrix.pkg)) || !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.pkg }}-musllinux-${{ matrix.platform.target }}
          path: crates/${{ matrix.pkg }}/dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        pkg: ["mdi", "octicons", "fontawesome", "simple-icons"]
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    name: windows ${{ matrix.pkg }} ${{ matrix.platform.target }}
    steps:
      - uses: actions/checkout@v5
        if: ${{ (startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, matrix.pkg)) || !startsWith(github.ref, 'refs/tags/') }}
      - uses: actions/setup-python@v5
        if: ${{ (startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, matrix.pkg)) || !startsWith(github.ref, 'refs/tags/') }}
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        if: ${{ (startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, matrix.pkg)) || !startsWith(github.ref, 'refs/tags/') }}
        uses: PyO3/maturin-action@v1
        with:
          working-directory: crates/${{ matrix.pkg }}
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Upload wheels
        if: ${{ (startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, matrix.pkg)) || !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.pkg }}-windows-${{ matrix.platform.target }}
          path: crates/${{ matrix.pkg }}/dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        pkg: ["mdi", "octicons", "fontawesome", "simple-icons"]
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    name: macOS ${{ matrix.pkg }} ${{ matrix.platform.target }}
    steps:
      - uses: actions/checkout@v5
        if: ${{ (startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, matrix.pkg)) || !startsWith(github.ref, 'refs/tags/') }}
      - uses: actions/setup-python@v5
        if: ${{ (startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, matrix.pkg)) || !startsWith(github.ref, 'refs/tags/') }}
        with:
          python-version: 3.x
      - name: Build wheels
        if: ${{ (startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, matrix.pkg)) || !startsWith(github.ref, 'refs/tags/') }}
        uses: PyO3/maturin-action@v1
        with:
          working-directory: crates/${{ matrix.pkg }}
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Upload wheels
        if: ${{ (startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, matrix.pkg)) || !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.pkg }}-macos-${{ matrix.platform.target }}
          path: crates/${{ matrix.pkg }}/dist

  sdist:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pkg: ["mdi", "octicons", "fontawesome", "simple-icons"]
    steps:
      - uses: actions/checkout@v5
        if: ${{ (startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, matrix.pkg)) || !startsWith(github.ref, 'refs/tags/') }}
      - name: Build sdist
        if: ${{ (startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, matrix.pkg)) || !startsWith(github.ref, 'refs/tags/') }}
        uses: PyO3/maturin-action@v1
        with:
          working-directory: crates/${{ matrix.pkg }}
          command: sdist
          args: --out dist
      - name: Upload sdist
        if: ${{ (startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, matrix.pkg)) || !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.pkg }}-sdist
          path: crates/${{ matrix.pkg }}/dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [linux, musllinux, windows, macos, sdist, test]
    permissions:
      # Use for deploying release artifacts via trusted publishing
      id-token: write
    strategy:
      matrix:
        pkg: ["mdi", "octicons", "fontawesome", "simple-icons"]
    steps:
      - uses: actions/download-artifact@v5
        with:
          pattern: wheels-${{ matrix.pkg }}-*
          merge-multiple: true
          path: dist
      - name: Setup uv
        uses: astral-sh/setup-uv@4959332f0f014c5280e7eac8b70c90cb574c9f9b # v6.6.0
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Twine check
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: uvx twine check dist/*
      - name: Publish to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, matrix.pkg) }}
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
